/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AccountListRelationFilter } from "../../account/base/AccountListRelationFilter";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { StringFilter } from "../../util/StringFilter";
import { MeasureListRelationFilter } from "../../measure/base/MeasureListRelationFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { SzenarioWhereUniqueInput } from "../../szenario/base/SzenarioWhereUniqueInput";
@InputType()
class LossWhereInput {
  @ApiProperty({
    required: false,
    type: () => AccountListRelationFilter,
  })
  @ValidateNested()
  @Type(() => AccountListRelationFilter)
  @IsOptional()
  @Field(() => AccountListRelationFilter, {
    nullable: true,
  })
  accounts?: AccountListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => MeasureListRelationFilter,
  })
  @ValidateNested()
  @Type(() => MeasureListRelationFilter)
  @IsOptional()
  @Field(() => MeasureListRelationFilter, {
    nullable: true,
  })
  measures?: MeasureListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  shortDescription?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => SzenarioWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => SzenarioWhereUniqueInput)
  @IsOptional()
  @Field(() => SzenarioWhereUniqueInput, {
    nullable: true,
  })
  szenario?: SzenarioWhereUniqueInput;
}
export { LossWhereInput };
